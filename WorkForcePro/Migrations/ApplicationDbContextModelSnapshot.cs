// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WorkForcePro.Data;

#nullable disable

namespace WorkForcePro.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WorkForcePro.Models.AttendanceSummary", b =>
                {
                    b.Property<int>("ComId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<int>("DtYear")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<int>("DtMonth")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<int>("Absent")
                        .HasColumnType("integer");

                    b.Property<int>("Late")
                        .HasColumnType("integer");

                    b.Property<int>("Present")
                        .HasColumnType("integer");

                    b.HasKey("ComId", "EmpId", "DtYear", "DtMonth");

                    b.HasIndex("EmpId");

                    b.ToTable("AttendanceSummaries");
                });

            modelBuilder.Entity("WorkForcePro.Models.Company", b =>
                {
                    b.Property<int>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ComId"));

                    b.Property<int>("Basic")
                        .HasColumnType("integer");

                    b.Property<string>("ComName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("HRent")
                        .HasColumnType("integer");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("boolean");

                    b.Property<int>("Medical")
                        .HasColumnType("integer");

                    b.HasKey("ComId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("WorkForcePro.Models.Department", b =>
                {
                    b.Property<int>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DeptId"));

                    b.Property<int>("ComId")
                        .HasColumnType("integer");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DeptId");

                    b.HasIndex("ComId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("WorkForcePro.Models.Designation", b =>
                {
                    b.Property<int>("DesigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DesigId"));

                    b.Property<int>("ComId")
                        .HasColumnType("integer");

                    b.Property<string>("DesigName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DesigId");

                    b.HasIndex("ComId");

                    b.ToTable("Designations");
                });

            modelBuilder.Entity("WorkForcePro.Models.Employee", b =>
                {
                    b.Property<int>("EmpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmpId"));

                    b.Property<int?>("Basic")
                        .HasColumnType("integer");

                    b.Property<int>("ComId")
                        .HasColumnType("integer");

                    b.Property<int>("DeptId")
                        .HasColumnType("integer");

                    b.Property<int>("DesigId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DtJoin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EmpCode")
                        .HasColumnType("integer");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Gross")
                        .HasColumnType("integer");

                    b.Property<int?>("HRent")
                        .HasColumnType("integer");

                    b.Property<int?>("Medical")
                        .HasColumnType("integer");

                    b.Property<int?>("Others")
                        .HasColumnType("integer");

                    b.Property<int>("ShiftId")
                        .HasColumnType("integer");

                    b.HasKey("EmpId");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptId");

                    b.HasIndex("DesigId");

                    b.HasIndex("ShiftId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WorkForcePro.Models.EmployeeAttendance", b =>
                {
                    b.Property<int>("ComId")
                        .HasColumnType("integer")
                        .HasColumnOrder(0);

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("dtDate")
                        .HasColumnType("date")
                        .HasColumnOrder(2);

                    b.Property<string>("AttStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("InTime")
                        .HasColumnType("interval");

                    b.Property<TimeSpan?>("OutTime")
                        .HasColumnType("interval");

                    b.HasKey("ComId", "EmpId", "dtDate");

                    b.ToTable("Attendence");
                });

            modelBuilder.Entity("WorkForcePro.Models.Salary", b =>
                {
                    b.Property<int>("ComId")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<int>("EmpId")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<int>("dtYear")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<int>("dtMonth")
                        .HasColumnType("integer")
                        .HasColumnOrder(4);

                    b.Property<int>("AbsentAmount")
                        .HasColumnType("integer");

                    b.Property<int>("Basic")
                        .HasColumnType("integer");

                    b.Property<int>("Gross")
                        .HasColumnType("integer");

                    b.Property<int>("Hrent")
                        .HasColumnType("integer");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("boolean");

                    b.Property<int>("Medical")
                        .HasColumnType("integer");

                    b.Property<int>("PaidAmount")
                        .HasColumnType("integer");

                    b.Property<int>("PayableAmount")
                        .HasColumnType("integer");

                    b.HasKey("ComId", "EmpId", "dtYear", "dtMonth");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("WorkForcePro.Models.Shift", b =>
                {
                    b.Property<int>("ShiftId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ShiftId"));

                    b.Property<int>("ComId")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("ShiftIn")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("ShiftLateTime")
                        .HasColumnType("interval");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeSpan>("ShiftOut")
                        .HasColumnType("interval");

                    b.HasKey("ShiftId");

                    b.HasIndex("ComId");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("WorkForcePro.Models.AttendanceSummary", b =>
                {
                    b.HasOne("WorkForcePro.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForcePro.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WorkForcePro.Models.Department", b =>
                {
                    b.HasOne("WorkForcePro.Models.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WorkForcePro.Models.Designation", b =>
                {
                    b.HasOne("WorkForcePro.Models.Company", "Company")
                        .WithMany("Designations")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WorkForcePro.Models.Employee", b =>
                {
                    b.HasOne("WorkForcePro.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForcePro.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForcePro.Models.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WorkForcePro.Models.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("WorkForcePro.Models.Shift", b =>
                {
                    b.HasOne("WorkForcePro.Models.Company", "Company")
                        .WithMany("Shifts")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WorkForcePro.Models.Company", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Designations");

                    b.Navigation("Employees");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("WorkForcePro.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WorkForcePro.Models.Designation", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("WorkForcePro.Models.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
