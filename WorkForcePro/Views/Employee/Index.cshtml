@model Employee
@{
    IEnumerable<Department> departments = ViewData["depts"] as IEnumerable<Department>;
    IEnumerable<Designation> designations = ViewData["desigs"] as IEnumerable<Designation>;
    IEnumerable<Shift> shifts = ViewData["shift"] as IEnumerable<Shift>;
}
<p><h3 style="color : brown">Add New Employee</h3></p>
<form asp-action="Index" id="addEmployeeForm">
    <p>

    </p>
    <div class="mb-3">
        <label asp-for="EmpCode" class="form-label"><b>Enter Employee Code</b></label>
        <input asp-for="EmpCode" type="number" class="form-control">
        <span class="text-danger" asp-validation-for="EmpCode"></span>
    </div>
    <div class="mb-3">
        <label asp-for="EmpName" class="form-label"><b>Enter Employee Name</b></label>
        <input asp-for="EmpName" type="text" class="form-control">
        <span class="text-danger" asp-validation-for="EmpName"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Gender" class="form-label"><b>Enter Gender</b></label>
        <select class="form-select mt-2" id="Gender" P asp-for="Gender">
            <option disabled selected>
                Select Gender
            </option>
            <option asp-for="Gender" value="Male">Male</option>
            <option asp-for="Gender" value="Female">Female</option>

        </select>
        <span class="text-danger" asp-validation-for="Gender"></span>
    </div>
    <label asp-for="DeptId" class="mb-1" for="Department"><b>Department</b></label>
    <select class="form-select mt-2" id="Department" asp-for="DeptId">
        <option disabled selected>
            Select Department
        </option>
        @foreach (var x in departments)
        {
            <option asp-for="DeptId" value="@x.DeptId">@x.DeptName</option>
        }

    </select>
    <p>

    </p>
    <label asp-for="DesigId" class="mb-1" for="Designation"><b>Designation</b></label>
    <select class="form-select mt-2" id="Designation" P asp-for="DesigId">
        <option disabled selected>
            Select Designation
        </option>
        @foreach (var y in designations)
        {
            <option asp-for="DesigId" value="@y.DesigId">@y.DesigName</option>
        }

    </select>
    <label asp-for="ShiftId" class="mb-1" for="Shift"><b>Shift</b></label>
    <select class="form-select mt-2" id="Shift" P asp-for="ShiftId">
        <option disabled selected>
            Select Shift
        </option>
        @foreach (var y in shifts)
        {
            <option asp-for="ShiftId" value="@y.ShiftId">@y.ShiftName</option>
        }

    </select>
    <p>

    </p>
    <div class="mb-3">
        <label asp-for="Gross" class="form-label"><b>Enter Gross Salary</b></label>
        <input asp-for="Gross" type="number" class="form-control" min="10000">
        <span class="text-danger" asp-validation-for="Gross"></span>
        <span class="text-danger" id="grossValidationMessage"></span>
    </div>

    <div class="mb-3">
        <label asp-for="Basic" class="form-label"><b>Enter Basic Salary Ratio</b></label>
        <input asp-for="Basic" readonly type="number" class="form-control">
        <span class="text-danger" asp-validation-for="Basic"></span>
    </div>
    <div class="mb-3">
        <label asp-for="HRent" class="form-label"><b>Enter House Rent Salary Ratio</b></label>
        <input asp-for="HRent" readonly type="number" class="form-control">
        <span class="text-danger" asp-validation-for="HRent"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Medical" class="form-label"><b>Enter Medical Expense Salary Ratio</b></label>
        <input asp-for="Medical" readonly type="number" class="form-control">
        <span class="text-danger" asp-validation-for="Medical"></span>
    </div>
    <div class="mb-3">
        <label asp-for="Others" class="form-label"><b>Enter Others Expense Salary Ratio</b></label>
        <input asp-for="Others" type="number" class="form-control">
        <span class="text-danger" asp-validation-for="Others"></span>
    </div>
    <div class="mb-3">
        <label asp-for="DtJoin" class="form-label"><b>Enter Joining Date</b></label>
        <input asp-for="DtJoin" type="datetime-local" class="form-control">
        <span class="text-danger" asp-validation-for="DtJoin"></span>
    </div>
    <p>


    </p>
    <button onclick="submitData()" class="btn btn-primary">Add</button>
    <p>
</form>
<div class="row m-0 ps-4 upper-form-style pt-2">
    <div id="employeetable"></div>
</div>
@section Scripts
{
    <link href="https://unpkg.com/tabulator-tables@5.5.0/dist/css/tabulator.min.css" rel="stylesheet">
    <script type="text/javascript" src="https://unpkg.com/tabulator-tables@5.5.0/dist/js/tabulator.min.js"></script>

    <script>
        var table;

        $(document).ready(function () {
            fetchDataFromServer();

            function fetchDataFromServer() {
                var url = '/Employee/ShowEmployee';
                return $.ajax({
                    url: url,
                    dataType: "json",
                }).done(function (response) {
                    console.log("Normal response:", response);
                    var dataTable = response;

                    initializeOrUpdateTable(dataTable);
                });
            }
        });



        function initializeOrUpdateTable(dataTable) {
            if (!table) {
                table = new Tabulator("#employeetable", {
                    data: dataTable,
                    layout: "fitColumns",
                    frozenRows: 1,
                    columns: [
                        { title: 'Employee Code', field: 'empCode' },
                        { title: 'Employee Name', field: 'empName' },
                        { title: 'Department', field: 'deptName' },
                        { title: 'Designation', field: 'desigName' },
                        { title: 'Shift', field: 'shiftName' },
                        { title: 'Gross Salary Percentage', field: 'gross' },
                        { title: 'Basic Salary Percentage', field: 'basic' },
                        { title: 'HRent Salary Percentage', field: 'hRent' },
                        { title: 'Medical Salary Percentage', field: 'medical' },
                        { title: 'Others(If Any)', field: 'others' },
                        {
                            title: "Actions",
                            formatter: function (cell, formatterParams, onRendered) {
                                var rowData = cell.getRow().getData();
                                console.log('Row data:', rowData);
                                return '<button class="btn btn-sm btn-primary" onclick="editRow(' + rowData.empId + ')">Edit</button>' +
                                    '<button class="btn btn-sm btn-danger" onclick="deleteRow(' + rowData.empId + ')">Delete</button>' +
                                    '<button class="btn btn-sm btn-primary" onclick="attendanceRow(' + rowData.empId + ')">Entry</button>' +
                                    '<button class="btn btn-sm btn-outline-secondary" onclick="reportRow(' + rowData.empId + ')">Report</button>' +
                                    '<button class="btn btn-sm btn-primary" onclick="reportDetailsRow(' + rowData.empId + ')">DailyReport</button>';
                            },
                            headerSort: false,
                            align: 'center',
                            width: 320,
                        },
                    ],
                    dataBound: function () {
                        var rows = table.getRows();
                        if (rows.length > 0) {
                            var cells = rows[0].getCells();
                            cells.forEach(cell => {
                                cell.freeze();
                            });
                        }
                    },
                });
            } else {
                table.setData(dataTable);
            }
        }

        function submitForm() {
            var grossValue = $('#Gross').val();

            if (grossValue < 10000) {
                $('#grossValidationMessage').text('Gross salary must be above 10000.');
                return;
            } else {
                $('#grossValidationMessage').text('');
            }

            $.ajax({
                url: '/Employee/Index',
                type: 'POST',
                data: $('#addEmployeeForm').serialize(),
                success: function (data) {
                    $('#addEmployeeForm')[0].reset();
                    fetchDataFromServer();
                },
                error: function () {
                    console.error('Error submitting form.');
                }
            });
        }

        function editRow(id) {
            window.location.href = '/Employee/Edit/' + id;
        }

        function deleteRow(id) {
            window.location.href = '/Employee/Delete/' + id;

            console.log('Delete clicked for row with ID:', id);
        }
        function attendanceRow(id) {
            window.location.href = '/Attendance/Entry?EmpId=' + id;

            console.log('Delete clicked for row with ID:', id);
        }
        function reportRow(id) {
            window.location.href = '/Attendance/GenerateReport?empId=' + id;

        }
        function reportDetailsRow(id) {
            window.location.href = '/Attendance/ShowReport?EmpId=' + id;

        }
    </script>
}
